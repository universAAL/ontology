package org.universAAL.ontology.sysinfo;

import org.universAAL.middleware.owl.ManagedIndividual;

/**
 * Ontological representation of SystemInfo in the sysinfo ontology. Methods
 * included in this class are the mandatory ones for representing an ontological
 * concept in Java classes for the universAAL platform. In addition getters and
 * setters for properties are included.
 * 
 * @author
 * @author Generated by the OntologyUML2Java transformation of AAL Studio
 */
public class SystemInfo extends ManagedIndividual {
    public static final String MY_URI = SysinfoOntology.NAMESPACE + "SystemInfo";
    public static final String PROP_SPACE_CHANGED = SysinfoOntology.NAMESPACE
	    + "spaceChanged";
    public static final String PROP_SPACE_JOINED = SysinfoOntology.NAMESPACE
	    + "spaceJoined";
    public static final String PROP_PEER_JOINED = SysinfoOntology.NAMESPACE
	    + "peerJoined";
    public static final String PROP_SPACE_LOST = SysinfoOntology.NAMESPACE
	    + "spaceLost";
    public static final String PROP_PEER_LOST = SysinfoOntology.NAMESPACE
	    + "peerLost";

    public SystemInfo() {
	super();
    }

    public SystemInfo(String uri) {
	super(uri);
    }

    public String getClassURI() {
	return MY_URI;
    }

    public int getPropSerializationType(String propURI) {
	return PROP_SERIALIZATION_FULL;
    }

    public boolean isWellFormed() {
	return true;
    }

    public AALSpaceDescriptor getSpaceJoined() {
	return (AALSpaceDescriptor) getProperty(PROP_SPACE_JOINED);
    }

    public void setSpaceJoined(AALSpaceDescriptor newPropValue) {
	if (newPropValue != null)
	    changeProperty(PROP_SPACE_JOINED, newPropValue);
    }

    public PeerCardDescriptor getPeerJoined() {
	return (PeerCardDescriptor) getProperty(PROP_PEER_JOINED);
    }

    public void setPeerJoined(PeerCardDescriptor newPropValue) {
	if (newPropValue != null)
	    changeProperty(PROP_PEER_JOINED, newPropValue);
    }

    public AALSpaceStatusDescriptor getSpaceChanged() {
	return (AALSpaceStatusDescriptor) getProperty(PROP_SPACE_CHANGED);
    }

    public void setSpaceChanged(AALSpaceStatusDescriptor newPropValue) {
	if (newPropValue != null)
	    changeProperty(PROP_SPACE_CHANGED, newPropValue);
    }

    public AALSpaceDescriptor getSpaceLost() {
	return (AALSpaceDescriptor) getProperty(PROP_SPACE_LOST);
    }

    public void setSpaceLost(AALSpaceDescriptor newPropValue) {
	if (newPropValue != null)
	    changeProperty(PROP_SPACE_LOST, newPropValue);
    }

    public PeerCardDescriptor getPeerLost() {
	return (PeerCardDescriptor) getProperty(PROP_PEER_LOST);
    }

    public void setPeerLost(PeerCardDescriptor newPropValue) {
	if (newPropValue != null)
	    changeProperty(PROP_PEER_LOST, newPropValue);
    }

}
